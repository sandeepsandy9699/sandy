package com.Sbms.controller;

import java.text.DecimalFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Random;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.Sbms.document.Sbms;
import com.Sbms.repository.SbmsRepository;

@RequestMapping("/sbms")
@RestController
@CrossOrigin(origins = "*", allowedHeaders = "*")
public class SbmsController {

	@Autowired
	SbmsRepository sbmsRepository;

	@PostMapping("/save")
	public void SaveData() throws InterruptedException {
		final DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd");
		DateTimeFormatter dtfTime = DateTimeFormatter.ofPattern("HH:mm:ss");
		final LocalDateTime now = LocalDateTime.now();
		Sbms sbms = sbmsRepository.findByDate(dtf.format(now));
		if (sbms == null) {
			sbms.setDate(dtf.format(now));
			long data[] = { 40, 55, 42, 49, 59, 50 };
			String label[] = { dtf.format(now) + " 01:02:59", dtf.format(now) + " 03:02:59",
					dtf.format(now) + " 09:02:59", dtf.format(now) + " 12:02:59", dtf.format(now) + " 15:02:59",
					dtf.format(now) + " 20:02:59" };
			/*
			 * do{ String otp = new DecimalFormat("0000").format(new
			 * Random().nextInt(9999)); }while(dtf.format(now));
			 */
			sbms.setData(data);
			sbms.setLabel(label);
			System.out.println("data saved");
			sbmsRepository.save(sbms);
		}
		Sbms sbms1 = sbmsRepository.findByDate(dtf.format(now));
		do {
			// sbms.setDate(dtf.format(now));
			for (int i = 1;; i++) {
				String random = new DecimalFormat("40").format(new Random().nextInt(60));
				data[i] = Long.parseLong(random);
				label[i] = dtf.format(now) + " " + dtfTime.format(now);
				sbms1.setData(data);
				sbms1.setLabel(label);
				sbmsRepository.save(sbms1);
				Thread.sleep(5000);
			}
		} while (sbms1 != null);

	}

	@GetMapping("/getData/{date}")
	public Sbms getData(@PathVariable String date) {
		System.out.println("Date: " + date);
		return sbmsRepository.findByDate(date);
	}

}
